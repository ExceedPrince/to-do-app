{"version":3,"sources":["icons/trash.svg","icons/clone.svg","components/Card.js","components/NewCard.js","components/UpdateCard.js","components/NewCardButton.js","components/DashName.js","components/Dashboard.js","App.js","App2.js","reportWebVitals.js","index.js"],"names":["Card","props","id","todoInfos","className","draggable","onDragStart","e","target","dataTransfer","setData","setTimeout","style","display","onDragOver","stopPropagation","onClick","nodeName","parentElement","classList","toggle","src","icon1","cursor","alt","width","height","deleteCard","bind","this","icon2","duplicateCard","createEditable","title","desc","NewCard","state","onSubmit","preventDefault","console","log","addTodo","titleChange","setState","value","descChange","type","name","onChange","Component","UpdateCard","onSubmitUP","updateTodo","titleChangeUP","descChangeUP","NewCardButton","showNewCard","DashName","actualDashName","setLocalDashName","lastElementChild","opacity","setDashName","placeholder","setDashNameNow","Dashboard","DashNameCt","styled","div","defaultColors","primary","newCardDiv","onDrop","card_id","getData","card","document","getElementById","appendChild","info","map","x","y","editable","App","dashName","todos","todo","filter","newTodo","Math","floor","random","oldCardObj","newCardObj","toString","mainId","unique","App2","useState","dashes","setDashes","Array","fill","item","index","nextDash","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d0b53d93.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trash.23b37181.svg\";","export default __webpack_public_path__ + \"static/media/clone.108432cb.svg\";","import React from 'react';\r\nimport icon1 from '../icons/trash.svg';\r\nimport icon2 from '../icons/clone.svg';\r\n\r\nfunction Card(props) {\r\n\r\n  const dragStart = e => {\r\n    const target = e.target;\r\n\r\n    e.dataTransfer.setData('card_id', target.id);\r\n\r\n    setTimeout(()=> {\r\n      target.style.display = \"none\"\r\n    }, 0);\r\n  }\r\n\r\n  const dragOver = e => {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  \r\n  const showDesc = (e) => {\r\n    if (e.target.nodeName === \"DIV\") {\r\n          e.target.parentElement.classList.toggle(\"showCard\");\r\n        } else {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id={ props.id + \"cont-card\" + props.todoInfos.id} className=\"card-ct\" draggable=\"true\" onDragStart={dragStart} onDragOver={dragOver}>\r\n\r\n      <div className=\"omg\" onClick={showDesc}>\r\n          <div className=\"cardButtons\">\r\n            <img src={icon1} style={{cursor: \"pointer\"}} alt=\"trash\" width=\"30\" height=\"30\" onClick={props.deleteCard.bind(this, props.todoInfos.id)}></img>\r\n            {/* <button className=\"del-card\" onClick={props.deleteCard.bind(this, props.todoInfos.id)}>Delete</button> */}\r\n            <img src={icon2} style={{cursor: \"pointer\"}} alt=\"clone\" width=\"30\" height=\"30\" onClick={props.duplicateCard.bind(this, props.todoInfos.id)}></img>\r\n            {/* <button className=\"doubleBtn\" onClick={props.duplicateCard.bind(this, props.todoInfos.id)}>Duplicate</button> */}\r\n          </div>\r\n\r\n          <div className=\"cardTitle\">\r\n            <button className=\"todoTitle\" onClick={props.createEditable.bind(this, props.todoInfos.id)}>\r\n              {props.todoInfos.title}\r\n            </button>\r\n          </div>\r\n          <div className=\"cardDesc\">\r\n              {props.todoInfos.desc}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\n\r\nclass NewCard extends Component {\r\n    state= {\r\n        title: \"\",\r\n        desc: \"\"\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.title === \"\") {\r\n            console.log(\"kellene egy látható hibaüzenet\");\r\n        } else {\r\n            this.props.addTodo(this.state.title, this.state.desc);\r\n        }\r\n    }\r\n\r\n    titleChange = (e) => this.setState( { title: e.target.value });\r\n    descChange = (e) => this.setState( { desc: e.target.value });\r\n\r\n    render() {\r\n    return (\r\n        <div className=\"card-ct\">\r\n\r\n            <form onSubmit={this.onSubmit}>\r\n            <input type=\"text\" className=\"title\" name=\"title\" \r\n            value={this.state.title}\r\n            onChange={this.titleChange}\r\n            /><br/>\r\n            <input type=\"text\" className=\"desc\" name=\"desc\" \r\n            value={this.state.desc}\r\n            onChange={this.descChange}\r\n            /><br/>\r\n            <input className=\"submitBtn\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n\r\n                {/*             <button onClick={props.deleteCard.bind(this, props.todoInfos.id)}>törlés</button>*/}            \r\n            </div>\r\n\r\n          \r\n      );\r\n    }\r\n}\r\n\r\nexport default NewCard;\r\n","import React, { Component } from 'react';\r\n\r\nclass UpdateCard extends Component {\r\n    state= {\r\n        id: this.props.todoInfos.id,\r\n        title: this.props.todoInfos.title,\r\n        desc: this.props.todoInfos.desc\r\n    }\r\n\r\n    onSubmitUP = (e) => {\r\n        e.preventDefault();\r\n        this.props.updateTodo(this.state.id, this.state.title, this.state.desc);\r\n/*         this.setState({ title: \"\" });\r\n        this.setState({ desc: \"\" }); */\r\n    }\r\n\r\n    titleChangeUP = (e) => this.setState( { title: e.target.value });\r\n    descChangeUP = (e) => this.setState( { desc: e.target.value });\r\n\r\n    render() {\r\n    return (\r\n        <div className=\"card-ct\">\r\n\r\n            <form onSubmit={this.onSubmitUP}>\r\n            <input type=\"text\" className=\"title\" name=\"title\" \r\n            value={this.state.title}\r\n            onChange={this.titleChangeUP}\r\n            /><br/>\r\n            <input type=\"text\" className=\"desc\" name=\"desc\" \r\n            value={this.state.desc}\r\n            onChange={this.descChangeUP}\r\n            /><br/>\r\n            <input className=\"submitBtn\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n                </div>    \r\n      );\r\n    }\r\n}\r\n\r\nexport default UpdateCard;\r\n","\r\nexport default function NewCardButton(props) {\r\n  return (\r\n          <div className=\"newCardBtn\">\r\n            <button className=\"new-card\" onClick={props.showNewCard}>Új TODO hozzáadása</button>\r\n          </div>\r\n          \r\n      );\r\n}","import React, { Component } from 'react';\r\n\r\nclass DashName extends Component {\r\n    state= {\r\n        actualDashName: this.props.actualDashName,\r\n    }\r\n\r\n    setDashNameNow() {\r\n        this.props.setDashName(this.state.actualDashName);\r\n    }\r\n\r\n    setLocalDashName = (e) => {\r\n        this.setState({ actualDashName: e.target.value });\r\n        e.target.parentElement.lastElementChild.style.opacity = 1;\r\n    }\r\n\r\n    render (){\r\n  return (\r\n        <div className=\"dashName\">\r\n\r\n            <input type=\"text\" id=\"nameInput\" className=\"board-names\"\r\n                                onChange={this.setLocalDashName}\r\n                                value={this.state.actualDashName}\r\n                                placeholder=\"dasboard name\" />\r\n            <button className=\"saveButton\" onClick={this.setDashNameNow.bind(this, this.props.setDashName)}>Save</button>\r\n      \r\n        </div>\r\n          \r\n      );\r\n  }\r\n}\r\n\r\nexport default DashName;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport NewCard from './NewCard';\r\nimport UpdateCard from './UpdateCard';\r\nimport NewCardButton from './NewCardButton';\r\nimport DashName from './DashName';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const DashNameCt = styled.div`\r\n    text-align: center;\r\n    background: ${props.defaultColors};\r\n  `\r\n\r\n  const drop = e => {\r\n    e.preventDefault();\r\n    const card_id = e.dataTransfer.getData('card_id');\r\n\r\n    const card = document.getElementById(card_id);\r\n    card.style.display = 'block';\r\n\r\n    e.target.appendChild(card);\r\n  }\r\n\r\n  const dragOver = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n   \r\n    <div className=\"dashboard-ct\">\r\n\r\n\r\n      <div className=\"dashboard\" >\r\n\r\n          <DashNameCt primary>\r\n            <DashName actualDashName={props.actualDashName} setDashName={props.setDashName} />        \r\n          </DashNameCt>\r\n\r\n        <div className=\"cards-ct\"> \r\n        {props.newCardDiv ? <NewCard addTodo={props.addTodo} /> : <NewCardButton showNewCard={props.showNewCard} />}\r\n        <br />\r\n        <div className=\"inner-cards-ct\" onDrop={drop} onDragOver={dragOver} id={props.id}>\r\n          {props.info.map( (x, y) =>\r\n           x.editable === false ? <Card id={props.id} key={y} todoInfos={x} deleteCard={props.deleteCard} duplicateCard={props.duplicateCard} createEditable={props.createEditable}/> : <UpdateCard key={y} todoInfos={x} deleteCard={props.deleteCard} updateTodo={props.updateTodo}/>\r\n          )}\r\n        </div>\r\n        \r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Dashboard from './components/Dashboard';\r\n\r\nconst defaultColors = () => {\r\n  let randomColor = Math.floor(Math.random()*16777215).toString(16);\r\n  return \"#\" + randomColor;\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    this.state = {\r\n    dashName: \"Untilted dashboard\",\r\n    todos: [\r\n/*       {\r\n        id: 1,\r\n        title: \"Menj boltba\",\r\n        desc: \"Vegyél chips-et\",\r\n        editable: false\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"Csinálj házimunkát\",\r\n        desc: \"Főzz, moss, takaríts\",\r\n        editable: false\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"Szerezz jó jegyeket\",\r\n        desc: \"Matek, töri, angol\",\r\n        editable: false\r\n      } */\r\n    ],\r\n    newCardDiv: false \r\n  }\r\n}\r\n\r\n\r\nsetDashName = (name) => {\r\n  this.setState ({ dashName: name });\r\n}\r\n\r\n createEditable = (id) => {\r\n    this.setState({ todos: this.state.todos.map(todo => {\r\n    if (todo.id === id) {\r\n      todo.editable = true\r\n      }\r\n      return todo;\r\n     }) });\r\n  }\r\n\r\n  deleteCard = (id) => {\r\n    this.setState ({ todos: [...this.state.todos.filter (todo => todo.id !== id)] });\r\n  }\r\n\r\n  addTodo = (title, desc) => {\r\n    let randID = Math.floor(10*Math.random()) + Math.floor(1000*Math.random());\r\n    const newTodo = { \r\n      id: randID,\r\n      title: title,\r\n      desc: desc,\r\n      editable: false\r\n    };\r\n    this.setState({ todos: [...this.state.todos, newTodo] });\r\n    this.setState ({ newCardDiv: false });\r\n  }\r\n\r\n  updateTodo = (id, title, desc) => {\r\n    this.setState({ todos: this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.title = title;\r\n        todo.desc = desc;\r\n        todo.editable = false\r\n        }\r\n        return todo;\r\n       }) });\r\n  }\r\n\r\n  duplicateCard = (id) => {\r\n    let oldCardObj= (this.state.todos.filter(todo => todo.id === id))[0];\r\n    let randID = Math.floor(10*Math.random()) + Math.floor(1000*Math.random());\r\n    const newCardObj = {\r\n      id: randID,\r\n      title: oldCardObj.title,\r\n      desc: oldCardObj.desc,\r\n      editable: false\r\n    };\r\n    this.setState({ todos: [...this.state.todos, newCardObj] });\r\n  }\r\n\r\n  showNewCard = () => {\r\n    this.setState ({ newCardDiv: true });\r\n  };\r\n\r\n  defaultColors = defaultColors();\r\n\r\n  mainId = this.props.unique;\r\n\r\n\r\n  render () {\r\n\r\n    return (\r\n      <>\r\n\r\n        <Dashboard info={this.state.todos}\r\n                    newCardDiv={this.state.newCardDiv}\r\n                    showNewCard={this.showNewCard}\r\n                    actualDashName={this.state.dashName}\r\n                    setDashName={this.setDashName}\r\n                    deleteCard={this.deleteCard}\r\n                    duplicateCard={this.duplicateCard}\r\n                    createEditable={this.createEditable}\r\n                    addTodo={this.addTodo}\r\n                    updateTodo={this.updateTodo}\r\n                    defaultColors={this.defaultColors}\r\n                    id={this.mainId}\r\n                    />\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { useState } from 'react';\r\nimport App from './App'\r\n\r\nfunction App2() {\r\n\r\n\tconst [dashes, setDashes] = useState(1);\r\n\r\n\tconst addDashes = () => {\r\n\t\tsetDashes(nextDash => nextDash + 1);\r\n/* \t\tconsole.log(dashes)\r\n */\t\t\r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<h1>FE2 T3 - ToDo App</h1>\r\n\t\t<div id=\"container\">\r\n\r\n\t\t\t{Array(dashes).fill(1).map((item,index) => (\r\n\t\t\t\t<App key={index} unique={index}/>\r\n\t\t\t))}\r\n\r\n\t\t\t<button id=\"new-dashboard\" onClick={addDashes}>+ Create dashboard</button>\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App2;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App2 from './App2';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App2 />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}